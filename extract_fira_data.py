#!/usr/bin/env python

from glyphsLib import GSFont
import utils as u


def extract_features():
    file = open("fira.fea", "w")
    font = GSFont("fira.glyphs")
    for feature in font.featurePrefixes:
        file.write(feature.code + "\n")
    for feature in font.features:
        code = u.add_backslash_to_glyphs(feature.code)
        file.write(
            f"feature {feature.name} "
            + "{\n\t"
            + u.remove_last_newlines(code).replace("\n", "\n\t")
            + "\n}"
            + f" {feature.name};\n\n"
        )
    file.close()


def extract_classes():
    font = GSFont("fira.glyphs")
    for _class in font.classes:
        file = open(f"classes/{_class.name}.fea", "w")
        file.write(_class.code)
        file.close()


FEAT_FILE_COMMENT = """
# This is an autogenerated configuration that includes, principally, a set of
# curated features that ligate.py will attempt to copy from Fira Code to your
# output font. Each feature may have a list of lookups. Features/lookups that
# aren't present in the version of Fira Code you're using will be skipped. To
# disable features/lookups, simply comment them out in this file.
"""

SCALE_FILE_COMMENT = """
    # When copying character glyphs from FiraCode, sometimes it is necessary to
    # adjust manually the glyph size by a scale factor. It will be ignored if
    # it's equal to 0.
"""

GLYPH_FILE_COMMENT = """
    # Copy glyphs for (some) individual characters from the ligature font as
    # well. This will result in punctuation that matches the ligatures more
    # closely, but may not fit in as well with the rest of the font.
"""

FEAT_BLACKLIST = {
    "aalt",
    "subs",
    "sups",
    "numr",
    "dnom",
    "frac",
    "ordn",
    "tnum",
    "onum",
    "case",
    "liga",
    "locl",
    "zero",
    "salt",
    "ccmp",
    "sinf",
    "hwid",
}.union(set([f"cv{str(i).zfill(2)}" for i in range(1, 15)]))

GLYPH_WHITELIST = """
        "underscore",
        "hyphen",

        # Multi-line brackets
        "uni239B",
        "uni239C",
        "uni239D",
        "uni239E",
        "uni239F",
        "uni23A0",
        "uni23A1",
        "uni23A2",
        "uni23A3",
        "uni23A4",
        "uni23A5",
        "uni23A6",
        "uni23A7",
        "uni23A8",
        "uni23A9",
        "uni23AA",
        "uni23AB",
        "uni23AC",
        "uni23AD",
"""


def create_config_set_file():
    font = GSFont("fira.glyphs")
    file = open("config_sample.py", "w")
    file.write(f"{FEAT_FILE_COMMENT}" + "\nconfig = {\n")
    file.write(f"\t{SCALE_FILE_COMMENT}" + '\t"scale": 1.0,\n')
    file.write(f'\t{GLYPH_FILE_COMMENT}\t"glyphs": [{GLYPH_WHITELIST}\t],\n')
    file.write('\t"features": {\n')
    for feature in font.features:
        if feature.name not in FEAT_BLACKLIST:
            ls = u.lookups(feature.code)
            if len(ls) > 0:
                fls = "[\n"
                for i in range(len(ls)):
                    fls += f'\t\t\t"{ls[i]}",\n'
                fls += "\t\t]"
            else:
                fls = "[]"
            file.write(f'\t\t"{feature.name}": {fls},\n')
    file.write("\t}\n")
    file.write("}")
    file.close()


def main():
    extract_features()
    # extract_classes()
    create_config_set_file()


if __name__ == "__main__":
    main()
